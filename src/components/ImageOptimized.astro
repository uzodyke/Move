---
export interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  sizes?: string;
  loading?: 'lazy' | 'eager';
  decoding?: 'async' | 'sync' | 'auto';
  class?: string;
}

const {
  src,
  alt,
  width,
  height,
  sizes = '(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw',
  loading = 'lazy',
  decoding = 'async',
  class: className = '',
} = Astro.props;

// Generate responsive image sizes
const generateSrcSet = (baseSrc: string, width?: number) => {
  if (!width) return baseSrc;

  const sizes = [480, 768, 1024, 1280, 1920];
  const validSizes = sizes.filter(size => size <= width);

  return validSizes
    .map(size => `${baseSrc}?w=${size}&q=75 ${size}w`)
    .join(', ');
};

const srcSet = generateSrcSet(src, width);
---

<img
  src={src}
  srcset={srcSet}
  alt={alt}
  width={width}
  height={height}
  sizes={sizes}
  loading={loading}
  decoding={decoding}
  class={className}
/>

<style>
  img {
    max-width: 100%;
    height: auto;
  }
</style>